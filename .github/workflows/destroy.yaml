name: Destroy roles

on:
  workflow_dispatch:

jobs:
  discover:
    name: Discover roles
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate matrix of Terraform roles
        id: set-matrix
        run: |
          matrix=$(find teams -type d -name "*-role" | \
            jq -R -s -c 'split("\n") | map(select(. != "")) | map({
              path: .,
              env: (split("/")[2]),
              team: (split("/")[1])
            })')
          echo "matrix=$matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  deploy:
    name: Destroy ${{ matrix.team }} roles in ${{ matrix.env }}
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.discover.outputs.matrix) }}
    environment: ${{ matrix.env }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
          aws-region: sa-east-1
          role-session-name: GitHubActionsDeployTeamRoles-${{ matrix.env }}

      - name: Verify AWS Role
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Initialize Terraform
        run: | 
          terraform init
          terraform refresh
        working-directory: ${{ matrix.path }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ${{ matrix.path }}
        env:
          TF_VAR_environment: ${{ matrix.env }}
          TF_VAR_team_name: ${{ matrix.team }}
          TF_VAR_region: sa-east-1
          TF_VAR_account_number: ${{ secrets.AWS_ACCOUNT_NUMBER }}