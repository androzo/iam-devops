name: Deploy team roles and policies to AWS

on:
  workflow_dispatch:
  push:
    paths:
      - "teams/**"

jobs:
  discover:
    name: Discover Terraform roles
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate matrix of Terraform roles
        id: set-matrix
        run: |
          matrix=$(find teams -type d -name "*-role" | \
            jq -R -s -c 'split("\n") | map(select(. != "")) | map({
              path: .,
              env: (split("/")[2]),
              team: (split("/")[1])
            })')
          echo "matrix=$matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy ${{ matrix.team }} roles in ${{ matrix.env }}
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.discover.outputs.matrix) }}
    environment: ${{ matrix.env }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE }}
          aws-region: sa-east-1
          role-session-name: GitHubActionsDeployTeamRoles-${{ matrix.env }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ matrix.path }}

      - name: Validate Terraform
        run: terraform validate
        working-directory: ${{ matrix.path }}

      - name: Plan Terraform
        run: |
          terraform plan -out=tfplan.binary
          terraform show -json tfplan.binary > tfplan.json
        working-directory: ${{ matrix.path }}

      - name: Validate IAM Role Policies
        uses: androzo/aws-validation@main
        with:
          tfplan_path: ${{ matrix.path }}/tfplan.json
        
        timeout-minutes: 2

      - name: Apply Terraform
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ matrix.path }}
